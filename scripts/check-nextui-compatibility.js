/**
 * Script para verificar compatibilidade entre NextUI e Tailwind CSS
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// Caminhos importantes
const projectRoot = path.resolve(__dirname, '..');
const packageJsonPath = path.join(projectRoot, 'package.json');

// Ler package.json
console.log('üìä Analisando depend√™ncias...');
const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));

// Extrair vers√µes
const tailwindVersion = packageJson.dependencies?.tailwindcss || packageJson.devDependencies?.tailwindcss;
console.log(`üîç Vers√£o do Tailwind no projeto: ${tailwindVersion || 'n√£o encontrada'}`);

// Verificar depend√™ncias do NextUI
const nextUIVersion = packageJson.dependencies?.['@nextui-org/react'];
console.log(`üîç Vers√£o do NextUI no projeto: ${nextUIVersion || 'n√£o encontrada'}`);

// Verificar se NextUI est√° instalado
if (!nextUIVersion) {
  console.log('‚ÑπÔ∏è NextUI n√£o est√° instalado como depend√™ncia direta.');
  process.exit(0);
}

// Verificar as depend√™ncias do NextUI
try {
  console.log('üîç Verificando depend√™ncias internas do NextUI...');
  const nodeModulesPath = path.join(projectRoot, 'node_modules');
  
  const nextUIPackagePath = path.join(nodeModulesPath, '@nextui-org', 'react', 'package.json');
  const nextUIPeerDepsPath = path.join(nodeModulesPath, '@nextui-org', 'theme', 'package.json');
  
  let nextUITailwindVersion = '';
  
  if (fs.existsSync(nextUIPeerDepsPath)) {
    const nextUITheme = JSON.parse(fs.readFileSync(nextUIPeerDepsPath, 'utf8'));
    nextUITailwindVersion = nextUITheme.dependencies?.tailwindcss;
    console.log(`üîç NextUI theme est√° usando Tailwind: ${nextUITailwindVersion || 'vers√£o n√£o encontrada'}`);
  }
  
  // Verificar compatibilidade
  if (tailwindVersion && nextUITailwindVersion) {
    const mainTailwindMajor = parseInt(tailwindVersion.match(/\\d+/)[0]);
    const nextUITailwindMajor = parseInt(nextUITailwindVersion.match(/\\d+/)[0]);
    
    if (mainTailwindMajor !== nextUITailwindMajor) {
      console.log('‚ö†Ô∏è AVISO: Incompatibilidade detectada entre vers√µes do Tailwind!');
      console.log(`   - Projeto: v${mainTailwindMajor}.x`);
      console.log(`   - NextUI: v${nextUITailwindMajor}.x`);
      console.log('');
      console.log('üîß Recomenda√ß√µes:');
      
      if (nextUITailwindMajor > mainTailwindMajor) {
        console.log('   1. Atualize o Tailwind CSS do projeto:');
        console.log(`      npm install -D tailwindcss@^${nextUITailwindMajor}.0.0`);
      } else {
        console.log('   1. Use uma vers√£o compat√≠vel do NextUI:');
        console.log('      npm install @nextui-org/react@latest-compatible');
      }
      
      console.log('   2. Ou mantenha as diferentes vers√µes, mas esteja ciente');
      console.log('      de poss√≠veis conflitos e problemas de estilo.');
    } else {
      console.log('‚úÖ As vers√µes do Tailwind s√£o compat√≠veis!');
    }
  }
  
} catch (error) {
  console.error('‚ùå Erro ao verificar compatibilidades:', error.message);
}
